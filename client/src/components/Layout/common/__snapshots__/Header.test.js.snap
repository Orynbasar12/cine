// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`expect header component 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="header-left-part"
      >
        <span>
          Главная
        </span>
        <div
          className="header-info"
        >
          <button
            className="btn-app"
          >
            <Link
              replace={false}
              to="/profile/apply"
            >
              Подать заявку
            </Link>
          </button>
          <div
            className="avatar"
          >
            <img
              src="/images/avatar.png"
            />
          </div>
          <img
            className="dropdown"
            src="/images/dropdown.svg"
          />
        </div>
      </div>,
      "className": "header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span>
            Главная
          </span>,
          <div
            className="header-info"
          >
            <button
              className="btn-app"
            >
              <Link
                replace={false}
                to="/profile/apply"
              >
                Подать заявку
              </Link>
            </button>
            <div
              className="avatar"
            >
              <img
                src="/images/avatar.png"
              />
            </div>
            <img
              className="dropdown"
              src="/images/dropdown.svg"
            />
          </div>,
        ],
        "className": "header-left-part",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Главная",
          },
          "ref": null,
          "rendered": "Главная",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="btn-app"
              >
                <Link
                  replace={false}
                  to="/profile/apply"
                >
                  Подать заявку
                </Link>
              </button>,
              <div
                className="avatar"
              >
                <img
                  src="/images/avatar.png"
                />
              </div>,
              <img
                className="dropdown"
                src="/images/dropdown.svg"
              />,
            ],
            "className": "header-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/profile/apply"
                >
                  Подать заявку
                </Link>,
                "className": "btn-app",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Подать заявку",
                  "replace": false,
                  "to": "/profile/apply",
                },
                "ref": null,
                "rendered": "Подать заявку",
                "type": [Function],
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  src="/images/avatar.png"
                />,
                "className": "avatar",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "src": "/images/avatar.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "dropdown",
                "src": "/images/dropdown.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="header-left-part"
        >
          <span>
            Главная
          </span>
          <div
            className="header-info"
          >
            <button
              className="btn-app"
            >
              <Link
                replace={false}
                to="/profile/apply"
              >
                Подать заявку
              </Link>
            </button>
            <div
              className="avatar"
            >
              <img
                src="/images/avatar.png"
              />
            </div>
            <img
              className="dropdown"
              src="/images/dropdown.svg"
            />
          </div>
        </div>,
        "className": "header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span>
              Главная
            </span>,
            <div
              className="header-info"
            >
              <button
                className="btn-app"
              >
                <Link
                  replace={false}
                  to="/profile/apply"
                >
                  Подать заявку
                </Link>
              </button>
              <div
                className="avatar"
              >
                <img
                  src="/images/avatar.png"
                />
              </div>
              <img
                className="dropdown"
                src="/images/dropdown.svg"
              />
            </div>,
          ],
          "className": "header-left-part",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Главная",
            },
            "ref": null,
            "rendered": "Главная",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="btn-app"
                >
                  <Link
                    replace={false}
                    to="/profile/apply"
                  >
                    Подать заявку
                  </Link>
                </button>,
                <div
                  className="avatar"
                >
                  <img
                    src="/images/avatar.png"
                  />
                </div>,
                <img
                  className="dropdown"
                  src="/images/dropdown.svg"
                />,
              ],
              "className": "header-info",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Link
                    replace={false}
                    to="/profile/apply"
                  >
                    Подать заявку
                  </Link>,
                  "className": "btn-app",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Подать заявку",
                    "replace": false,
                    "to": "/profile/apply",
                  },
                  "ref": null,
                  "rendered": "Подать заявку",
                  "type": [Function],
                },
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <img
                    src="/images/avatar.png"
                  />,
                  "className": "avatar",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "src": "/images/avatar.png",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "dropdown",
                  "src": "/images/dropdown.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
